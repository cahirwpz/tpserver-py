#!/usr/bin/env python

import requirements, logging, sys

from twisted.internet import reactor

from twisted.python.log import PythonLoggingObserver
from tp.server.model import DatabaseManager
from tp.server.logger import Formatter

DatabaseManager()

from tp.server.server import ThousandParsecServerFactory

class Configuration( object ):
	log_level		= 'info'
	log_drop_time	= False
	log_drop_system	= False
	tcp_port		= 6923
	tls_port		= 6924
	listen_tls		= False
	database		= 'sqlite:///tp.db'

def main():
	configuration = Configuration()

	formatter = Formatter( '%(asctime)s [%(name)s] %(message)s', '%Y-%m-%d %H:%M:%S' )

	handler = logging.StreamHandler()
	handler.setFormatter( formatter )

	logging.root.name = 'server'
	logging.root.addHandler( handler )
	logging.root.setLevel( logging.DEBUG )

	logger = logging.getLogger('sqlalchemy.engine')
	logger.setLevel( logging.DEBUG )

	observer = PythonLoggingObserver()
	observer.start()

	logger = logging.getLogger('twisted')
	logger.setLevel( logging.WARNING )

	factory	= ThousandParsecServerFactory()

	try:
		factory.configure( configuration )
		DatabaseManager().configure( configuration )
	except Exception, ex:
		raise SystemExit( '\033[31;1mConfiguration error:\033[0m %s' % ex )

	factory.start()
	reactor.run()

if __name__ == "__main__":
	main()
