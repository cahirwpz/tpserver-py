
import math

try:
	from tp import netlib
except ImportError:
	import sys
	sys.path.append("../")
	import netlib

import db
from sobjects.Board    import Board
from sobjects.Message  import Message
from sobjects.Object   import Object
from sobjects.Order    import Order
from sobjects.User     import User

from sorder.NOp        import NOp
from sorder.Move       import Move
from sorder.BuildFleet import BuildFleet

def OrderGet(top, d={}):
	if top.orders() > 0:
		order = Order(top.id, 0)

		if not d.has_key(order.type):
			d[order.type] = []

		d[order.type].append(order)

	# Walk around the universe and build a global order list
	for id in top.contains():
		OrderGet(Object(id), d)

process_order = [1, 0]
def main():
	# Connect to the database
	db.connect()

	# Clean up any phoney orders

	# Get all the orders
	d = {}
	OrderGet(Object(0), d)

	for type in process_order:
		if not d.has_key(type):
			continue

		if type == 0:
			function = NOp
		elif type == 1:
			function = Move
		elif type == 2:
			function = BuildFleet

		# Import the order processor
		for order in d[type]:
			print order
			function(order)
			
if __name__ == "__main__":
	main()


