
import math

try:
	from tp import netlib
except ImportError:
	import sys
	sys.path.append("../")
	import netlib

import db
from sbases.Board    import Board
from sbases.Message  import Message
from sbases.Object   import Object
from sbases.Order    import Order
from sbases.User     import User

from sorders.NOp        import NOp
from sorders.Move       import Move
from sorders.BuildFleet import BuildFleet

def OrderGet(top, d={}):
	if top.orders() > 0:
		# Find the first valid order on this object
		while True:
			order = Order(top.id, 0)

			if False:
				order = None
			else:
				break

		if not d.has_key(order.type):
			d[order.type] = []

		d[order.type].append(order)

	# Walk around the universe and build a global order list
	for id in top.contains():
		OrderGet(Object(id), d)

process_order = [1, 0]
def main():
	# Connect to the database
	db.connect()

	# Clean up any phoney orders

	# Get all the orders
	d = {}
	OrderGet(Object(0), d)

	for type in process_order:
		if not d.has_key(type):
			continue

		# Import the order processor
		for order in d[type]:
			print order
			order.do()
			
if __name__ == "__main__":
	main()


