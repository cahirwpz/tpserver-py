Fully python server. Uses a database backend.

Following bugs need to be fixed:
	- IDs are incremental, they should be random
	- Change the class.__init__(id=id) method to a class.from_db(id) factory method (so
      it is like the from_packet method).
	- Make the system force InnoDB on MySQL.

	- Impliment a "sliding window" object to reduce number of requests.

	- Impliment the view stuff which is described in the "How Stuff Works" document.

Still need to be done:
		Orders don't take into account the effect of previous orders.

		Remove the included pyscheme and make it work with the default pyscheme install.

		Find all FIXME in the code and actually fix them. 
		
		There are a lot of places where hacks have been added to get stuff working. These 
		need to be cleaned up.

		Optimisation and Caching. There are plenty of places for optimisation, currently
		tpserver-py is quite slow and could easily be much faster. The addition of caching
		of many things would speed up the server dramatically.

		Remove duplicate code. There are a bunch of places which have very similar code, it
		might be a good idea to clean these up.

		Make reparenting use a sphere (instead of the current cube)

		Remove Player tool
			- Remove the username/password record
			- Removes the private message board
			- Renames/Reowners the homesystem/homeplanet
			- Removes any fleets

		Figure out how to support multiple orders happening in 1 turn.
		Figure out how to get rid of dummy orders which do nothing.
	
		Rewrite the permission stuff (allowed/protect) to actually use permissions 
			- Allow people to give permissions to other people
			- Administrator can do anything

		Write a test suite
			- Tests connect and login
			- Tests getting the base Universe object
			- Tests getting one of each object type
			- Tests security (ie get object as owner, administrator, other)
			- Tests adding and removing every order
			- Tests message board stuff
			- Tests manipulating the design stuff (include categories, designs, components and properties)
 
Supports the following:
		Connect
		Login
		Feature
        Object_GetById
		Object_GetByPos (square instead of required circle)
		Object_GetByContainer
		Object_GetID
		OrderDesc_GetByID
		OrderDesc_GetID
        Order_Get
        Order_Insert
        Order_Remove
		Board_GetByID
		Board_GetID
		Message_Get
		Message_Remove
		Message_Insert
		Resource_GetByID
		Resource_GetID
		Category_GetByID
		Category_GetID
		Component_GetByID
		Component_GetID

        Orders actually do stuff
			Move order works (Reparenting needs testing)
			NOp order works
			
        Orders report how long they'll take
        Orders reports the resources used

		Add player tool
			- Adds username/password record
			- Adds a private message board
			- Adds a homesystem
			- Adds a homeplanet
			- Adds random number of extra planets <- These shouldn't all have the same coordinates
			- Adds inital fleet

		Add clean tool
			- Removes all extra stuff added

		Database dumping program. 
		
		TPCL and Design support
			- Can get designs from server
			- Can get properties from server
			- Can get categories from server
			- Can get components from server
			- Can get properties from server

		Scheme Design support
			- Designs calculate properties
			- Designs check requirements and provide feedback
			- Designs correctly produce


Add CSV Sync:
	- If new line is added or removed from the csv containing the information then add or remove them from the database midgame.
	
Dronesec:
	PlanerGenerator:
		-Find a way to make the names more... understandable. Less random.
	
	Database
		- Find a way to keep the server independent from the rulesets without breaking database loading and deletion.
	Add more Drones and Researches
